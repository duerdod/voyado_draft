{"version":3,"file":"flight-voyado.esm.js","sources":["../src/states/GlobalActivation.ts","../src/hooks/useGlobalActivation.ts","../src/VoyadoProvider.tsx","../src/states/ExternalLookup.ts","../src/hooks/useVoyadoLookup.ts"],"sourcesContent":["import { assign, Machine, send, DoneEventObject } from 'xstate';\n\nexport interface VoyadoProviderSettings {\n  loginPage?: string;\n  signupPage?: string;\n  loginOnActivation?: boolean;\n  manualActivation: boolean;\n}\n\nexport interface VoyadoActivationContext {\n  externalCustomerToken: string;\n  customer: any;\n  status: StateEventMapperIndex;\n  providerSettings: VoyadoProviderSettings;\n}\n\ninterface ActivationSchema {\n  states: {\n    idle: {};\n    activated: {};\n    checking_action_required: {};\n    no_action_required: {};\n    action_required: {\n      states: {\n        try_activate: {};\n        activation_failed: {\n          states: {\n            status_response: {};\n            non_existing: {};\n            already_activated: {};\n            additional_data: {};\n          };\n        };\n      };\n    };\n  };\n}\n\ntype ActivationEvents =\n  | { type: 'CHECKING_ACTION_REQUIRED'; data: any }\n  | { type: 'NON_EXISTING_CUSTOMER'; data: any }\n  | { type: 'ALREADY_ACTIVATED'; data: any }\n  | { type: 'ACTIVATION_REQUIRED'; data: any }\n  | { type: 'ADDITIONAL_DATA_REQUIRED'; data: any }\n  | DoneEventObject;\n\ntype StateEventMapperIndex =\n  | 'NoActionRequired' // Dummy\n  | 'CustomerNotFound'\n  | 'CustomerAlreadyActivated'\n  | 'AdditionalUserDataRequired';\n\nconst StateEventMapper: { [key in StateEventMapperIndex]: string } = {\n  NoActionRequired: 'NO_ACTION_REQUIRED',\n  CustomerNotFound: 'NON_EXISTING_CUSTOMER',\n  CustomerAlreadyActivated: 'ALREADY_ACTIVATED',\n  AdditionalUserDataRequired: 'ADDITIONAL_DATA_REQUIRED',\n};\n\nconst sendActionEvent = send((context: VoyadoActivationContext) => ({\n  type: StateEventMapper[context.status],\n}));\n\nconst setStatusReason = assign<VoyadoActivationContext, ActivationEvents>({\n  status: (_, event: ActivationEvents) => {\n    const [errorType] = event.data.error;\n    return errorType.message || ('NoActionRequired' as StateEventMapperIndex);\n  },\n  customer: (_: any, event: ActivationEvents) => {\n    if (event.data.activateExternalCustomerByToken) {\n      return { ...event.data.activateExternalCustomerByToken.customer };\n    } else {\n      return undefined;\n    }\n  },\n});\n\nconst storeCustomer = assign<VoyadoActivationContext, ActivationEvents>({\n  customer: (context: VoyadoActivationContext, event: ActivationEvents) => {\n    if (event.data?.externalCustomerLookup?.customer) {\n      return {\n        ...context.customer,\n        ...event.data.externalCustomerLookup.customer,\n        // Since there is a mismatch between SignupInput type and ExternalLookup type\n        streetName: event.data.externalCustomerLookup.customer.address,\n        mobilePhone: event.data.externalCustomerLookup.customer.mobilePhoneNumber,\n      };\n    } else {\n      return {\n        ...context.customer,\n      };\n    }\n  },\n});\n\nexport const createActivationMachine = (providerSettings: VoyadoProviderSettings) =>\n  Machine<VoyadoActivationContext, ActivationSchema, ActivationEvents>(\n    {\n      id: 'ActivationMachine',\n      initial: 'idle',\n      context: {\n        externalCustomerToken: '',\n        customer: undefined,\n        status: 'NoActionRequired',\n        providerSettings: {\n          ...providerSettings,\n        },\n      },\n      states: {\n        idle: {\n          always: [\n            {\n              target: 'checking_action_required',\n              cond: 'shouldInitialize',\n            },\n            {\n              target: 'no_action_required',\n            },\n          ],\n        },\n        activated: {\n          always: [\n            {\n              target: 'checking_action_required',\n              cond: 'shouldInitialize',\n            },\n            {\n              target: 'no_action_required',\n            },\n          ],\n        },\n        checking_action_required: {\n          invoke: {\n            id: 'tryLogin',\n            src: 'tryLogin',\n            onDone: 'no_action_required',\n            onError: 'action_required',\n          },\n        },\n        no_action_required: {\n          type: 'final',\n        },\n        action_required: {\n          id: 'action_required',\n          initial: 'try_activate',\n          states: {\n            try_activate: {\n              invoke: {\n                id: 'tryActivateByToken',\n                src: 'tryActivateByToken',\n                onDone: {\n                  target: '#ActivationMachine.activated',\n                },\n                onError: {\n                  target: 'activation_failed',\n                  actions: ['setStatusReason', 'sendActionEvent'],\n                },\n              },\n            },\n            activation_failed: {\n              id: 'activation_failed',\n              initial: 'status_response',\n              states: {\n                status_response: {\n                  on: {\n                    NON_EXISTING_CUSTOMER: 'non_existing',\n                    ALREADY_ACTIVATED: 'already_activated',\n                    ADDITIONAL_DATA_REQUIRED: 'additional_data',\n                    NO_ACTION_REQUIRED: 'non_existing',\n                  },\n                },\n                non_existing: {\n                  type: 'final',\n                },\n                already_activated: {\n                  type: 'final'\n                },\n                additional_data: {\n                  type: 'final',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    {\n      actions: {\n        setStatusReason,\n        sendActionEvent,\n        storeCustomer,\n      },\n    }\n  );\n","import {\n  createActivationMachine,\n  VoyadoProviderSettings,\n  VoyadoActivationContext,\n} from '../states/GlobalActivation';\nimport { useMachine } from '@xstate/react';\n\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { MutationResult } from '@apollo/react-common/lib/types/types';\nimport useAuth from '@jetshop/core/components/AuthContext/useAuth';\nimport {\n  LoginExternalCustomerResult,\n  ActivateExternalCustomerByTokenResult,\n} from '@jetshop/core/types';\nimport { useLocation } from 'react-router';\nimport qs from 'qs';\n\nimport LoginExternalCustomer from '../queries/LoginExternalCustomer.gql';\nimport ActivateExternalCustomerByToken from '../queries/ActivateExternalCustomerByToken.gql';\n\nexport function useGlobalActivation(providerSettings: VoyadoProviderSettings) {\n  const client = useApolloClient();\n  const { search } = useLocation();\n  const { loggedIn, logIn } = useAuth();\n  const { eclub = '' } = qs.parse(search, { ignoreQueryPrefix: true });\n\n  const [state] = useMachine(createActivationMachine(providerSettings), {\n    context: {\n      externalCustomerToken: encodeURIComponent(eclub as string),\n    },\n    services: {\n      tryLogin,\n      tryActivateByToken,\n    },\n    guards: {\n      shouldInitialize: () => (eclub as string).length > 0 && !loggedIn,\n    },\n  });\n\n  function tryLogin(context: VoyadoActivationContext) {\n    return client\n      .mutate({\n        mutation: LoginExternalCustomer,\n        variables: {\n          input: {\n            externalCustomerToken: context.externalCustomerToken,\n          },\n        },\n      })\n      .then(\n        ({ data }: MutationResult<{ loginExternalCustomer: LoginExternalCustomerResult }>) => {\n          if (data?.loginExternalCustomer.token?.value) {\n            return Promise.resolve(logIn(data?.loginExternalCustomer?.token?.value));\n          }\n          return Promise.reject();\n        },\n        (error: any) => {\n          return Promise.reject(error);\n        }\n      );\n  }\n\n  function tryActivateByToken(context: VoyadoActivationContext) {\n    return (\n      client\n        .mutate({\n          mutation: ActivateExternalCustomerByToken,\n          variables: {\n            input: { externalCustomerToken: context.externalCustomerToken },\n          },\n          errorPolicy: 'all',\n        })\n        // Change this when API is returning a status like we do on external lookup.\n        // If we got a status, we could just forward them as event.type.\n        .then((response: any) => {\n          const data: MutationResult<{\n            activateExternalCustomerByToken: ActivateExternalCustomerByTokenResult;\n          }> = response.data;\n\n          const error: any = response.errors;\n\n          if (error) {\n            return Promise.reject({ error: { ...error }, ...data });\n          }\n          return Promise.resolve(data);\n        })\n    );\n  }\n\n  console.log('GlobalActivationState: ', JSON.stringify(state.value));\n  // console.log(state.context)\n\n  const states = {\n    isAdditionalDataRequired: state.matches('action_required.activation_failed.additional_data'),\n    isNonExistingCustomer: state.matches('action_required.activation_failed.non_existing'),\n    isActivationRequired: state.matches('action_required.activation_failed.already_activated'),\n  };\n\n  return {\n    ...states,\n  };\n}\n","import React, { createContext } from 'react';\n\nimport { useGlobalActivation } from './hooks/useGlobalActivation';\nimport { VoyadoProviderSettings } from './states/GlobalActivation';\n\nexport const VoyadoContext = createContext({});\n\ninterface VoyadoProviderProps {\n  children: React.ReactNode;\n  settings: VoyadoProviderSettings;\n}\n\nexport const VoyadoProvider = (props: VoyadoProviderProps) => {\n  const activationValues = useGlobalActivation({\n    ...props.settings,\n  });\n  return <VoyadoContext.Provider value={activationValues} {...props} />;\n};\n","import { Machine, assign, send, DoneEventObject } from 'xstate';\n\nconst EVENTS = {\n  ACTIVATION_REQUIRED: 'ACTIVATION_REQUIRED',\n  PREEXISTING_CUSTOMER: 'PREEXISTING_CUSTOMER',\n  ADDITIONAL_USER_DATA_REQUIRED: 'ADDITIONAL_USER_DATA_REQUIRED',\n  NON_EXISTING_CUSTOMER: 'NON_EXISTING_CUSTOMER',\n};\n\nexport const defaultContext: Partial<LookupContext> = {\n  activateOnLookup: false,\n};\n\nexport interface LookupContext {\n  customer: any;\n  activateOnLookup: boolean;\n  activationError: null | string;\n}\n\nexport interface LookupSchema {\n  states: {\n    idle: {};\n    lookup: {\n      states: {\n        lookup_loading: {};\n        lookup_failed: {};\n        lookup_success: {\n          states: {\n            status_response: {};\n            activation: {\n              states: {\n                activation_required: {};\n                activation_loading: {};\n                activation_success: {};\n                activation_failed: {};\n              };\n            };\n            additional_data: {};\n            preexisting: {};\n            non_existing: {\n              states: {\n                non_existing_customer: {};\n                person_lookup_loading: {};\n                person_lookup_success: {};\n                person_lookup_failed: {};\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n}\n\nexport type LookupEvents =\n  | { type: 'DO_LOOKUP'; data: { key?: string } }\n  | { type: 'ACTIVATION_REQUIRED'; data: any }\n  | { type: 'PREEXISTING_CUSTOMER'; data: any }\n  | { type: 'ADDITIONAL_USER_DATA_REQUIRED'; data: any }\n  | { type: 'NON_EXISTING_CUSTOMER'; data: any }\n  | { type: 'ACTIVATE_CUSTOMER'; data?: any }\n  | { type: 'RETRY'; data?: any }\n  | DoneEventObject;\n\nconst sendLookupSuccessEvent = send((_: any, event: LookupEvents) => ({\n  type: event.data.externalCustomerLookup.status,\n  data: event.data.externalCustomerLookup,\n}));\n\nconst storeEmail = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => ({\n    ...context.customer,\n    emailAddress: {\n      masked: event.data.key\n    },\n  }),\n});\n\nconst storeCustomer = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => {\n    if (event.data?.externalCustomerLookup?.customer) {\n      return {\n        ...context.customer,\n        ...event.data.externalCustomerLookup.customer,\n        // Since there is a mismatch between SignupInput and ExternalLookup\n        streetName: event.data.externalCustomerLookup.customer.address,\n        mobilePhone: event.data.externalCustomerLookup.customer.mobilePhoneNumber,\n      };\n    } else {\n      return {\n        ...context.customer,\n      };\n    }\n  },\n});\n\nconst storeLookupData = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => {\n    if (event?.data?.personLookup) {\n      return { ...event.data.personLookup };\n    } else {\n      return { ...context.customer }\n    }\n  },\n});\n\nconst storeToken = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => ({\n    ...context.customer,\n    token: event.data.activateExternalCustomerById.token.value,\n  }),\n});\n\nconst setActivationError = assign<LookupContext, LookupEvents>({\n  activationError: () => '',\n});\n\nexport const LookupMachine = Machine<LookupContext, LookupSchema, LookupEvents>(\n  {\n    id: 'LookupMachine',\n    initial: 'idle',\n    context: {\n      activationError: null,\n      activateOnLookup: false,\n      customer: undefined,\n    },\n    states: {\n      idle: {\n        id: 'idle',\n        on: {\n          DO_LOOKUP: 'lookup',\n        },\n      },\n      lookup: {\n        entry: 'storeEmail',\n        initial: 'lookup_loading',\n        states: {\n          lookup_loading: {\n            invoke: {\n              id: 'fetchLookupStatus',\n              src: 'externalLookup',\n              onDone: {\n                target: 'lookup_success',\n                actions: ['sendLookupSuccessEvent'],\n              },\n              onError: 'lookup_failed',\n            },\n          },\n          lookup_failed: {\n            on: {\n              RETRY: '#idle',\n            },\n          },\n          lookup_success: {\n            initial: 'status_response',\n            entry: 'storeCustomer',\n            states: {\n              status_response: {\n                on: {\n                  [EVENTS.ACTIVATION_REQUIRED]: '#activation',\n                  [EVENTS.PREEXISTING_CUSTOMER]: '#preexisting',\n                  [EVENTS.ADDITIONAL_USER_DATA_REQUIRED]: '#additional_data',\n                  [EVENTS.NON_EXISTING_CUSTOMER]: '#non_existing',\n                },\n              },\n              // Account needs activation. Then can login.\n              activation: {\n                id: 'activation',\n                initial: 'activation_required',\n                states: {\n                  activation_required: {\n                    always: {\n                      target: 'activation_loading',\n                      cond: context => context.activateOnLookup,\n                    },\n                    on: {\n                      ACTIVATE_CUSTOMER: 'activation_loading',\n                    },\n                  },\n                  activation_loading: {\n                    invoke: {\n                      id: 'activate-customer-by-externalid',\n                      src: 'activateExternalId',\n                      onDone: {\n                        actions: 'storeToken',\n                        target: 'activation_success',\n                      },\n                      onError: 'activation_failed',\n                    },\n                  },\n                  activation_success: {\n                    type: 'final',\n                  },\n                  activation_failed: {\n                    entry: 'setActivationError',\n                    on: {\n                      RETRY: '#idle',\n                    },\n                  },\n                },\n              },\n              preexisting: {\n                // Can login.\n                id: 'preexisting',\n                type: 'final',\n              },\n              additional_data: {\n                // Need more data to actually create a customer.\n                id: 'additional_data',\n                type: 'final',\n              },\n              // Customer does not exist. Try fetch required information.\n              non_existing: {\n                id: 'non_existing',\n                initial: 'non_existing_customer',\n                states: {\n                  non_existing_customer: {\n                    always: {\n                      target: 'person_lookup_loading',\n                    },\n                  },\n                  person_lookup_loading: {\n                    invoke: {\n                      id: 'fetch_person_lookupdata',\n                      src: 'personLookup',\n                      onDone: {\n                        target: 'person_lookup_success',\n                      },\n                      onError: 'person_lookup_failed',\n                    },\n                    exit: 'storeLookupData',\n                  },\n                  person_lookup_success: {\n                    type: 'final',\n                  },\n                  person_lookup_failed: {\n                    type: 'final',\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      sendLookupSuccessEvent,\n      setActivationError,\n      storeEmail,\n      storeCustomer,\n      storeToken,\n      storeLookupData,\n    },\n  }\n);\n","import { useMachine } from '@xstate/react';\nimport { LookupMachine, LookupContext, LookupEvents } from '../states/ExternalLookup';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { QueryResult, MutationResult } from '@apollo/react-common';\nimport {\n  PersonLookup,\n  ExternalCustomerResult,\n  ActivateExternalCustomerByIdResult,\n} from '@jetshop/core/types';\n\nimport ExternalLookupQuery from '../queries/ExternalLookupQuery.gql';\nimport ActivateExternalId from '../queries/ActivateExternalId.gql';\nimport LookupQuery from '../queries/LookupQuery.gql';\n\nexport function useVoyadoLookup(settings: Partial<LookupContext>) {\n  const client = useApolloClient();\n  const [state, send] = useMachine(LookupMachine, {\n    services: {\n      externalLookup,\n      activateExternalId,\n      personLookup,\n    },\n    context: {\n      ...settings,\n      customer: null,\n    },\n  });\n\n  function externalLookup(_: any, event: LookupEvents) {\n    return client\n      .query({\n        query: ExternalLookupQuery,\n        variables: { key: event.data.key },\n      })\n      .then(({ data }: { data: QueryResult<{ ExternalLookupQuery: ExternalCustomerResult }> }) => {\n        return data;\n      });\n  }\n\n  function personLookup(context: LookupContext) {\n    return client\n      .query({\n        query: LookupQuery,\n        variables: { key: context.customer.emailAddress },\n      })\n      .then(({ data }: { data: QueryResult<{ LookupQuery: PersonLookup }> }) => data);\n  }\n\n  function activateExternalId(context: LookupContext) {\n    return client\n      .mutate({\n        mutation: ActivateExternalId,\n        variables: {\n          input: { externalCustomerId: context.customer.externalId },\n        },\n      })\n      .then(\n        ({\n          data,\n        }: {\n          data: MutationResult<{\n            ActivateExternalId: ActivateExternalCustomerByIdResult;\n          }>;\n        }) => data\n      );\n  }\n\n  const lookup = (key: string) => {\n    send({ type: 'DO_LOOKUP', data: { key } });\n  };\n\n  const activate = () => {\n    send({ type: 'ACTIVATE_CUSTOMER' });\n  };\n\n  const retryLookup = () => {\n    send({ type: 'RETRY' });\n  };\n\n  // Surface API responses.\n  const states = {\n    isActivationRequired: state.matches('lookup.lookup_success.activation.activation_required'),\n    isActivationPending: state.matches('lookup.lookup_success.activation.activation_loading'),\n    isActivationSuccess: state.matches('lookup.lookup_success.activation.activation_success'),\n    isPreExistingCustomer: state.matches('lookup.lookup_success.preexisting'),\n    IsAdditionalDataRequired: state.matches('lookup.lookup_success.additional_data'),\n    isNonExistingCustomer: state.matches('lookup.lookup_success.non_existing'),\n    isPersonLookupPending: state.matches(\n      'lookup.lookup_success.non_existing.person_lookup_loading'\n    ),\n    hasPersonLookupData: state.matches('lookup.lookup_success.non_existing.person_lookup_success'),\n    error: {\n      lookupError: state.matches('lookup.lookup_failed'),\n      activationError: state.matches('lookup.lookup_success.activation.activation_failed'),\n      errorMessage: state.context.activationError,\n    },\n  };\n\n  console.log('VoyadoLookupState: ', JSON.stringify(state.value));\n\n  return {\n    lookup,\n    activate,\n    retryLookup,\n    ...states,\n    customer: state.context.customer,\n  };\n}\n"],"names":["StateEventMapper","NoActionRequired","CustomerNotFound","CustomerAlreadyActivated","AdditionalUserDataRequired","sendActionEvent","send","context","type","status","setStatusReason","assign","_","event","data","error","errorType","message","customer","activateExternalCustomerByToken","undefined","storeCustomer","externalCustomerLookup","streetName","address","mobilePhone","mobilePhoneNumber","createActivationMachine","providerSettings","Machine","id","initial","externalCustomerToken","states","idle","always","target","cond","activated","checking_action_required","invoke","src","onDone","onError","no_action_required","action_required","try_activate","actions","activation_failed","status_response","on","NON_EXISTING_CUSTOMER","ALREADY_ACTIVATED","ADDITIONAL_DATA_REQUIRED","NO_ACTION_REQUIRED","non_existing","already_activated","additional_data","useGlobalActivation","client","useApolloClient","useLocation","search","useAuth","loggedIn","logIn","qs","parse","ignoreQueryPrefix","eclub","useMachine","encodeURIComponent","services","tryLogin","tryActivateByToken","guards","shouldInitialize","length","state","mutate","mutation","LoginExternalCustomer","variables","input","then","loginExternalCustomer","token","value","Promise","resolve","reject","ActivateExternalCustomerByToken","errorPolicy","response","errors","console","log","JSON","stringify","isAdditionalDataRequired","matches","isNonExistingCustomer","isActivationRequired","VoyadoContext","createContext","VoyadoProvider","props","activationValues","settings","React","Provider","EVENTS","ACTIVATION_REQUIRED","PREEXISTING_CUSTOMER","ADDITIONAL_USER_DATA_REQUIRED","defaultContext","activateOnLookup","sendLookupSuccessEvent","storeEmail","emailAddress","masked","key","storeLookupData","personLookup","storeToken","activateExternalCustomerById","setActivationError","activationError","LookupMachine","DO_LOOKUP","lookup","entry","lookup_loading","lookup_failed","RETRY","lookup_success","activation","activation_required","ACTIVATE_CUSTOMER","activation_loading","activation_success","preexisting","non_existing_customer","person_lookup_loading","exit","person_lookup_success","person_lookup_failed","useVoyadoLookup","externalLookup","activateExternalId","query","ExternalLookupQuery","LookupQuery","ActivateExternalId","externalCustomerId","externalId","activate","retryLookup","isActivationPending","isActivationSuccess","isPreExistingCustomer","IsAdditionalDataRequired","isPersonLookupPending","hasPersonLookupData","lookupError","errorMessage"],"mappings":"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"}