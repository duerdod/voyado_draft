{"version":3,"file":"flight-voyado.esm.js","sources":["../src/states/GlobalActivation.ts","../src/resolver/index.ts","../src/hooks/useGlobalActivation.ts","../src/VoyadoProvider.tsx","../src/states/ExternalLookup.ts","../src/hooks/useVoyadoLookup.ts"],"sourcesContent":["import { assign, Machine, send, DoneEventObject } from 'xstate';\n\nexport interface VoyadoProviderSettings {\n  loginPage?: string;\n  signupPage?: string;\n  loginOnActivation?: boolean;\n  manualActivation: boolean;\n}\n\nexport interface VoyadoActivationContext {\n  externalCustomerToken: string;\n  customer: any;\n  status: StateEventMapperIndex;\n  providerSettings: VoyadoProviderSettings;\n}\n\ninterface ActivationSchema {\n  states: {\n    idle: {};\n    activated: {};\n    checking_action_required: {};\n    no_action_required: {};\n    action_required: {\n      states: {\n        try_activate: {};\n        activation_failed: {\n          states: {\n            status_response: {};\n            non_existing: {};\n            already_activated: {};\n            additional_data: {};\n          };\n        };\n      };\n    };\n  };\n}\n\ntype ActivationEvents =\n  | { type: 'CHECKING_ACTION_REQUIRED'; data: any }\n  | { type: 'NON_EXISTING_CUSTOMER'; data: any }\n  | { type: 'ALREADY_ACTIVATED'; data: any }\n  | { type: 'ACTIVATION_REQUIRED'; data: any }\n  | { type: 'ADDITIONAL_DATA_REQUIRED'; data: any }\n  | DoneEventObject;\n\ntype StateEventMapperIndex =\n  | 'NoActionRequired' // Dummy\n  | 'CustomerNotFound'\n  | 'CustomerAlreadyActivated'\n  | 'AdditionalUserDataRequired';\n\nconst StateEventMapper: { [key in StateEventMapperIndex]: string } = {\n  NoActionRequired: 'NO_ACTION_REQUIRED',\n  CustomerNotFound: 'NON_EXISTING_CUSTOMER',\n  CustomerAlreadyActivated: 'ALREADY_ACTIVATED',\n  AdditionalUserDataRequired: 'ADDITIONAL_DATA_REQUIRED',\n};\n\nconst sendActionEvent = send((context: VoyadoActivationContext) => ({\n  type: StateEventMapper[context.status],\n}));\n\nconst setStatusReason = assign<VoyadoActivationContext, ActivationEvents>({\n  status: (_, event: ActivationEvents) => {\n    const [errorType] = event.data.error;\n    return errorType.message || ('NoActionRequired' as StateEventMapperIndex);\n  },\n  customer: (_: any, event: ActivationEvents) => {\n    if (event.data.activateExternalCustomerByToken) {\n      return { ...event.data.activateExternalCustomerByToken.customer };\n    } else {\n      return undefined;\n    }\n  },\n});\n\nconst storeCustomer = assign<VoyadoActivationContext, ActivationEvents>({\n  customer: (context: VoyadoActivationContext, event: ActivationEvents) => {\n    if (event.data?.externalCustomerLookup?.customer) {\n      return {\n        ...context.customer,\n        ...event.data.externalCustomerLookup.customer,\n        // Since there is a mismatch between SignupInput type and ExternalLookup type\n        streetName: event.data.externalCustomerLookup.customer.address,\n        mobilePhone: event.data.externalCustomerLookup.customer.mobilePhoneNumber,\n      };\n    } else {\n      return {\n        ...context.customer,\n      };\n    }\n  },\n});\n\nexport const createActivationMachine = (providerSettings: VoyadoProviderSettings) =>\n  Machine<VoyadoActivationContext, ActivationSchema, ActivationEvents>(\n    {\n      id: 'ActivationMachine',\n      initial: 'idle',\n      context: {\n        externalCustomerToken: '',\n        customer: undefined,\n        status: 'NoActionRequired',\n        providerSettings: {\n          ...providerSettings,\n        },\n      },\n      states: {\n        idle: {\n          always: [\n            {\n              target: 'checking_action_required',\n              cond: 'shouldInitialize',\n            },\n            {\n              target: 'no_action_required',\n            },\n          ],\n        },\n        activated: {\n          // Log in.\n          always: [\n            {\n              target: 'checking_action_required',\n              cond: 'shouldInitialize',\n            },\n            {\n              target: 'no_action_required',\n            },\n          ],\n        },\n        checking_action_required: {\n          invoke: {\n            id: 'tryLogin',\n            src: 'tryLogin',\n            onDone: 'no_action_required',\n            onError: 'action_required',\n          },\n        },\n        no_action_required: {\n          type: 'final',\n        },\n        action_required: {\n          id: 'action_required',\n          initial: 'try_activate',\n          states: {\n            try_activate: {\n              invoke: {\n                id: 'tryActivateByToken',\n                src: 'tryActivateByToken',\n                onDone: {\n                  target: '#ActivationMachine.activated',\n                },\n                onError: {\n                  target: 'activation_failed',\n                  actions: ['setStatusReason', 'sendActionEvent'],\n                },\n              },\n            },\n            activation_failed: {\n              id: 'activation_failed',\n              initial: 'status_response',\n              states: {\n                status_response: {\n                  on: {\n                    NON_EXISTING_CUSTOMER: 'non_existing',\n                    ALREADY_ACTIVATED: 'already_activated',\n                    ADDITIONAL_DATA_REQUIRED: 'additional_data',\n                    NO_ACTION_REQUIRED: 'non_existing',\n                  },\n                },\n                non_existing: {\n                  type: 'final',\n                },\n                already_activated: {\n                  type: 'final',\n                },\n                additional_data: {\n                  type: 'final',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    {\n      actions: {\n        setStatusReason,\n        sendActionEvent,\n        storeCustomer,\n      },\n    }\n  );\n","import ApolloClient from 'apollo-client';\nimport { LookupContext, LookupEvents } from '../states/ExternalLookup';\nimport { VoyadoActivationContext } from '../states/GlobalActivation';\n\nimport ActivateExternalCustomerByToken from '../queries/ActivateExternalCustomerByToken.gql';\nimport ActivateExternalId from '../queries/ActivateExternalId.gql';\nimport ExternalLookupQuery from '../queries/ExternalLookupQuery.gql';\nimport LoginExternalCustomer from '../queries/LoginExternalCustomer.gql';\nimport LookupQuery from '../queries/LookupQuery.gql';\n\n// Semi login resolvers\nfunction tryLogin(\n  context: VoyadoActivationContext,\n  options: {\n    client: ApolloClient<any>;\n    callback: (token: string) => void;\n  }\n) {\n  const logIn = options.callback;\n  return options.client\n    .mutate({\n      mutation: LoginExternalCustomer,\n      variables: {\n        input: {\n          externalCustomerToken: context.externalCustomerToken,\n        },\n      },\n    })\n    .then(\n      ({ data }) => {\n        if (data?.loginExternalCustomer.token?.value) {\n          return Promise.resolve(logIn(data?.loginExternalCustomer?.token?.value));\n        } else {\n          return Promise.reject();\n        }\n      },\n      error => {\n        return Promise.reject(error);\n      }\n    );\n}\n\nfunction tryActivateByToken(\n  context: VoyadoActivationContext,\n  options: {\n    client: ApolloClient<any>;\n    callback?: any;\n  }\n) {\n  return (\n    options.client\n      .mutate({\n        mutation: ActivateExternalCustomerByToken,\n        variables: {\n          input: { externalCustomerToken: context.externalCustomerToken },\n        },\n        // This is needed because we're using both the error and data to decide the next event.\n        errorPolicy: 'all',\n      })\n      // Change this when API is returning a status like we do on external lookup.\n      // If we got a status, we could just forward them as event.type.\n      .then(({ data, errors }) => {\n        if (errors) {\n          return Promise.reject({ error: { ...errors }, ...data });\n        } else {\n          return Promise.resolve(data);\n        }\n      })\n  );\n}\n\n// Lookup resolvers\nfunction externalLookup(\n  event: LookupEvents,\n  options: {\n    client: ApolloClient<any>;\n  }\n) {\n  return options.client\n    .query({\n      query: ExternalLookupQuery,\n      variables: { key: event.data.key },\n    })\n    .then(({ data }) => data);\n}\n\nfunction activateExternalId(\n  context: LookupContext,\n  options: {\n    client: ApolloClient<any>;\n  }\n) {\n  return options.client\n    .mutate({\n      mutation: ActivateExternalId,\n      variables: {\n        input: { externalCustomerId: context.customer.externalId },\n      },\n    })\n    .then(({ data }) => data);\n}\n\nfunction personLookup(\n  context: LookupContext,\n  options: {\n    client: ApolloClient<any>;\n  }\n) {\n  return options.client\n    .query({\n      query: LookupQuery,\n      variables: { key: context.customer.emailAddress },\n    })\n    .then(({ data }) => data);\n}\n\nexport { tryLogin, tryActivateByToken, externalLookup, activateExternalId, personLookup };\n","import { createActivationMachine, VoyadoProviderSettings } from '../states/GlobalActivation';\nimport { useMachine } from '@xstate/react';\n\nimport { useApolloClient } from '@apollo/react-hooks';\n\nimport useAuth from '@jetshop/core/components/AuthContext/useAuth';\n\nimport { useLocation } from 'react-router';\nimport qs from 'qs';\n\nimport * as resolver from '../resolver';\n\nexport function useGlobalActivation(providerSettings: VoyadoProviderSettings) {\n  const client = useApolloClient();\n  const { search } = useLocation();\n  const { loggedIn, logIn } = useAuth();\n  const { eclub = '' } = qs.parse(search, { ignoreQueryPrefix: true });\n\n  const [state] = useMachine(createActivationMachine(providerSettings), {\n    context: {\n      externalCustomerToken: encodeURIComponent(eclub as string),\n    },\n    services: {\n      tryLogin: context => {\n        return resolver.tryLogin(context, {\n          client,\n          callback: logIn,\n        });\n      },\n      tryActivateByToken: context => {\n        return resolver.tryActivateByToken(context, { client });\n      },\n    },\n    guards: {\n      shouldInitialize: () => (eclub as string).length > 0 && !loggedIn,\n    },\n  });\n\n  console.log('GlobalActivationState: ', JSON.stringify(state.value));\n  // console.log(state.context)\n\n  const states = {\n    isAdditionalDataRequired: state.matches('action_required.activation_failed.additional_data'),\n    isNonExistingCustomer: state.matches('action_required.activation_failed.non_existing'),\n    isActivationRequired: state.matches('action_required.activation_failed.already_activated'),\n  };\n\n  return {\n    ...states,\n  };\n}\n","import React, { createContext } from 'react';\n\nimport { useGlobalActivation } from './hooks/useGlobalActivation';\nimport { VoyadoProviderSettings } from './states/GlobalActivation';\n\nexport const VoyadoContext = createContext({});\n\ninterface VoyadoProviderProps {\n  children: React.ReactNode;\n  settings: VoyadoProviderSettings;\n}\n\nexport const VoyadoProvider = (props: VoyadoProviderProps) => {\n  const activationValues = useGlobalActivation({\n    ...props.settings,\n  });\n  return <VoyadoContext.Provider value={activationValues} {...props} />;\n};\n","import { Machine, assign, send, DoneEventObject } from 'xstate';\n\nconst EVENTS = {\n  ACTIVATION_REQUIRED: 'ACTIVATION_REQUIRED',\n  PREEXISTING_CUSTOMER: 'PREEXISTING_CUSTOMER',\n  ADDITIONAL_USER_DATA_REQUIRED: 'ADDITIONAL_USER_DATA_REQUIRED',\n  NON_EXISTING_CUSTOMER: 'NON_EXISTING_CUSTOMER',\n};\n\nexport const defaultContext: Partial<LookupContext> = {\n  activateOnLookup: false,\n};\n\nexport interface LookupContext {\n  customer: any;\n  activateOnLookup: boolean;\n  activationError: null | string;\n}\n\nexport interface LookupSchema {\n  states: {\n    idle: {};\n    lookup: {\n      states: {\n        lookup_loading: {};\n        lookup_failed: {};\n        lookup_success: {\n          states: {\n            status_response: {};\n            activation: {\n              states: {\n                activation_required: {};\n                activation_loading: {};\n                activation_success: {};\n                activation_failed: {};\n              };\n            };\n            additional_data: {};\n            preexisting: {};\n            non_existing: {\n              states: {\n                non_existing_customer: {};\n                person_lookup_loading: {};\n                person_lookup_success: {};\n                person_lookup_failed: {};\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n}\n\nexport type LookupEvents =\n  | { type: 'DO_LOOKUP'; data: { key?: string } }\n  | { type: 'ACTIVATION_REQUIRED'; data: any }\n  | { type: 'PREEXISTING_CUSTOMER'; data: any }\n  | { type: 'ADDITIONAL_USER_DATA_REQUIRED'; data: any }\n  | { type: 'NON_EXISTING_CUSTOMER'; data: any }\n  | { type: 'ACTIVATE_CUSTOMER'; data?: any }\n  | { type: 'RETRY'; data?: any }\n  | DoneEventObject;\n\nconst sendLookupSuccessEvent = send((_: any, event: LookupEvents) => ({\n  type: event.data.externalCustomerLookup.status,\n  data: event.data.externalCustomerLookup,\n}));\n\nconst storeEmail = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => ({\n    ...context.customer,\n    emailAddress: {\n      masked: event.data.key,\n    },\n  }),\n});\n\nconst storeCustomer = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => {\n    if (event.data?.externalCustomerLookup?.customer) {\n      return {\n        ...context.customer,\n        ...event.data.externalCustomerLookup.customer,\n        // Since there is a mismatch between SignupInput and ExternalLookup\n        streetName: event.data.externalCustomerLookup.customer.address,\n        mobilePhone: event.data.externalCustomerLookup.customer.mobilePhoneNumber,\n      };\n    } else {\n      return {\n        ...context.customer,\n      };\n    }\n  },\n});\n\nconst storeLookupData = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => {\n    if (event?.data?.personLookup) {\n      return { ...event.data.personLookup };\n    } else {\n      return { ...context.customer };\n    }\n  },\n});\n\nconst storeToken = assign<LookupContext, LookupEvents>({\n  customer: (context: LookupContext, event: LookupEvents) => ({\n    ...context.customer,\n    token: event.data.activateExternalCustomerById.token.value,\n  }),\n});\n\nconst setActivationError = assign<LookupContext, LookupEvents>({\n  activationError: () => '',\n});\n\nexport const LookupMachine = Machine<LookupContext, LookupSchema, LookupEvents>(\n  {\n    id: 'LookupMachine',\n    initial: 'idle',\n    context: {\n      activationError: null,\n      activateOnLookup: false,\n      customer: undefined,\n    },\n    states: {\n      idle: {\n        id: 'idle',\n        on: {\n          DO_LOOKUP: 'lookup',\n        },\n      },\n      lookup: {\n        entry: 'storeEmail',\n        initial: 'lookup_loading',\n        states: {\n          lookup_loading: {\n            invoke: {\n              id: 'fetchLookupStatus',\n              src: 'externalLookup',\n              onDone: {\n                target: 'lookup_success',\n                actions: ['sendLookupSuccessEvent'],\n              },\n              onError: 'lookup_failed',\n            },\n          },\n          lookup_failed: {\n            on: {\n              RETRY: '#idle',\n            },\n          },\n          lookup_success: {\n            initial: 'status_response',\n            entry: 'storeCustomer',\n            states: {\n              status_response: {\n                on: {\n                  [EVENTS.ACTIVATION_REQUIRED]: '#activation',\n                  [EVENTS.PREEXISTING_CUSTOMER]: '#preexisting',\n                  [EVENTS.ADDITIONAL_USER_DATA_REQUIRED]: '#additional_data',\n                  [EVENTS.NON_EXISTING_CUSTOMER]: '#non_existing',\n                },\n              },\n              // Account needs activation. Then can login.\n              activation: {\n                id: 'activation',\n                initial: 'activation_required',\n                states: {\n                  activation_required: {\n                    always: {\n                      target: 'activation_loading',\n                      cond: context => context.activateOnLookup,\n                    },\n                    on: {\n                      ACTIVATE_CUSTOMER: 'activation_loading',\n                    },\n                  },\n                  activation_loading: {\n                    invoke: {\n                      id: 'activate-customer-by-externalid',\n                      src: 'activateExternalId',\n                      onDone: {\n                        actions: 'storeToken',\n                        target: 'activation_success',\n                      },\n                      onError: 'activation_failed',\n                    },\n                  },\n                  activation_success: {\n                    type: 'final',\n                  },\n                  activation_failed: {\n                    entry: 'setActivationError',\n                    on: {\n                      RETRY: '#idle',\n                    },\n                  },\n                },\n              },\n              preexisting: {\n                // Can login.\n                id: 'preexisting',\n                type: 'final',\n              },\n              additional_data: {\n                // Need more data to actually create a customer.\n                id: 'additional_data',\n                type: 'final',\n              },\n              // Customer does not exist. Try fetch required information.\n              non_existing: {\n                id: 'non_existing',\n                initial: 'non_existing_customer',\n                states: {\n                  non_existing_customer: {\n                    always: {\n                      target: 'person_lookup_loading',\n                    },\n                  },\n                  person_lookup_loading: {\n                    invoke: {\n                      id: 'fetch_person_lookupdata',\n                      src: 'personLookup',\n                      onDone: {\n                        target: 'person_lookup_success',\n                      },\n                      onError: 'person_lookup_failed',\n                    },\n                    exit: 'storeLookupData',\n                  },\n                  person_lookup_success: {\n                    type: 'final',\n                  },\n                  person_lookup_failed: {\n                    type: 'final',\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      sendLookupSuccessEvent,\n      setActivationError,\n      storeEmail,\n      storeCustomer,\n      storeToken,\n      storeLookupData,\n    },\n  }\n);\n","import { useMachine } from '@xstate/react';\nimport { LookupMachine, LookupContext, LookupEvents } from '../states/ExternalLookup';\nimport { useApolloClient } from '@apollo/react-hooks';\n\nimport * as resolver from '../resolver';\n\nexport function useVoyadoLookup(settings: Partial<LookupContext>) {\n  const client = useApolloClient();\n  const [state, send] = useMachine(LookupMachine, {\n    services: {\n      externalLookup: (_, event: LookupEvents) => {\n        return resolver.externalLookup(event, {\n          client,\n        });\n      },\n      activateExternalId: (context: LookupContext) => {\n        return resolver.activateExternalId(context, {\n          client,\n        });\n      },\n      personLookup: (context: LookupContext) => {\n        return resolver.personLookup(context, {\n          client,\n        });\n      },\n    },\n    context: {\n      ...settings,\n      customer: null,\n    },\n  });\n\n  const lookup = (key: string) => {\n    send({ type: 'DO_LOOKUP', data: { key } });\n  };\n\n  const activate = () => {\n    send({ type: 'ACTIVATE_CUSTOMER' });\n  };\n\n  const retryLookup = () => {\n    send({ type: 'RETRY' });\n  };\n\n  // Surface API responses.\n  const states = {\n    isActivationRequired: state.matches('lookup.lookup_success.activation.activation_required'),\n    isActivationPending: state.matches('lookup.lookup_success.activation.activation_loading'),\n    isActivationSuccess: state.matches('lookup.lookup_success.activation.activation_success'),\n    isPreExistingCustomer: state.matches('lookup.lookup_success.preexisting'),\n    IsAdditionalDataRequired: state.matches('lookup.lookup_success.additional_data'),\n    isNonExistingCustomer: state.matches('lookup.lookup_success.non_existing'),\n    isPersonLookupPending: state.matches(\n      'lookup.lookup_success.non_existing.person_lookup_loading'\n    ),\n    hasPersonLookupData: state.matches('lookup.lookup_success.non_existing.person_lookup_success'),\n    error: {\n      lookupError: state.matches('lookup.lookup_failed'),\n      activationError: state.matches('lookup.lookup_success.activation.activation_failed'),\n      errorMessage: state.context.activationError,\n    },\n  };\n\n  console.log('VoyadoLookupState: ', JSON.stringify(state.value));\n\n  return {\n    lookup,\n    activate,\n    retryLookup,\n    ...states,\n    customer: state.context.customer,\n  };\n}\n"],"names":["StateEventMapper","NoActionRequired","CustomerNotFound","CustomerAlreadyActivated","AdditionalUserDataRequired","sendActionEvent","send","context","type","status","setStatusReason","assign","_","event","data","error","errorType","message","customer","activateExternalCustomerByToken","undefined","storeCustomer","externalCustomerLookup","streetName","address","mobilePhone","mobilePhoneNumber","createActivationMachine","providerSettings","Machine","id","initial","externalCustomerToken","states","idle","always","target","cond","activated","checking_action_required","invoke","src","onDone","onError","no_action_required","action_required","try_activate","actions","activation_failed","status_response","on","NON_EXISTING_CUSTOMER","ALREADY_ACTIVATED","ADDITIONAL_DATA_REQUIRED","NO_ACTION_REQUIRED","non_existing","already_activated","additional_data","tryLogin","options","logIn","callback","client","mutate","mutation","LoginExternalCustomer","variables","input","then","loginExternalCustomer","token","value","Promise","resolve","reject","tryActivateByToken","ActivateExternalCustomerByToken","errorPolicy","errors","externalLookup","query","ExternalLookupQuery","key","activateExternalId","ActivateExternalId","externalCustomerId","externalId","personLookup","LookupQuery","emailAddress","useGlobalActivation","useApolloClient","useLocation","search","useAuth","loggedIn","qs","parse","ignoreQueryPrefix","eclub","useMachine","encodeURIComponent","services","resolver","guards","shouldInitialize","length","state","console","log","JSON","stringify","isAdditionalDataRequired","matches","isNonExistingCustomer","isActivationRequired","VoyadoContext","createContext","VoyadoProvider","props","activationValues","settings","React","Provider","EVENTS","ACTIVATION_REQUIRED","PREEXISTING_CUSTOMER","ADDITIONAL_USER_DATA_REQUIRED","defaultContext","activateOnLookup","sendLookupSuccessEvent","storeEmail","masked","storeLookupData","storeToken","activateExternalCustomerById","setActivationError","activationError","LookupMachine","DO_LOOKUP","lookup","entry","lookup_loading","lookup_failed","RETRY","lookup_success","activation","activation_required","ACTIVATE_CUSTOMER","activation_loading","activation_success","preexisting","non_existing_customer","person_lookup_loading","exit","person_lookup_success","person_lookup_failed","useVoyadoLookup","activate","retryLookup","isActivationPending","isActivationSuccess","isPreExistingCustomer","IsAdditionalDataRequired","isPersonLookupPending","hasPersonLookupData","lookupError","errorMessage"],"mappings":"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"}